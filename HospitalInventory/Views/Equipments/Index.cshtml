@model IEnumerable<HospitalInventory.Models.Equipment>

@{
    ViewBag.Title = "Index";
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Login/LoginPage");
    }
    else if (Session["userRole"].Equals("Staff"))
    {
        Response.Redirect("~/Home/ErrorPage");
    }
}

<style>
    a{
        color: purple;
    }
</style>

<h2 class="text-center" style="font-family: 'Copperplate Gothic'; font-size: x-large">Equipment List</h2>

<div class="panel-heading">
    <a style="float:left; font-size:medium" href="@Url.Action("Create", "Equipments")">Create New Equipment</a>
    <a style="float:right; font-size:medium" href="equipmentcategories" title="Manage_EquipmentCategories">Manage Equipment Categories</a>
</div>

<br />
<div>

    <table class="text-center">
        <tr class="container">
            <td>
                <p style="background-color: darkgreen; margin-left:400px; width: 150px; text-align:center; color: gold">AVAILABLE</p>
            </td>
            <td>
                <p style="background-color: red; margin-left:50px; width: 150px; text-align:center; color: gold">NOT AVAILABLE</p>
            </td>
        </tr>
    </table>
    <hr/>

    @*to search equipment*@
    @using (Html.BeginForm("Index", "Equipments", FormMethod.Get))
    {
        <div class="form-horizontal">
            <div class="form-group">
                <label class="col-md-10">Search By:</label>
                <div class="col-md-10">
                    @Html.RadioButton("searchBy", "EquipmentName", true)
                    <text>Equipment Name</text>
                    <br />
                    @Html.RadioButton("searchBy", "EquipmentCategoryName")
                    <text>Equipment Category Name</text>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-6">
                <input type="text" name="Search" class="form-control" placeholder="Enter the search string" style="max-width:100%; background-color: black; color: gold" />
            </div>
            <div class="col-md-2">
                <input type="submit" value="Search" style="background-color: black; color: gold" />
            </div>
        </div>
    }
    <br />
    <hr style="border-color: black">
    @*when the string does not match any of rows*@
    @if (Model.Count() == 0)
    {

        string pattern = @"!@#$%^&*()-=*/+[]{};:<>?/.,";
        string st = ViewBag.SearchString;
        //if the string is having special character as input and that's why it didn't match
        if (pattern.Contains(st.Substring(0, 1)))
        {
            <h5>Your Search - <b>@ViewBag.SearchString</b> for search category <b>@ViewBag.SearchByString</b> did not match any rows</h5>
            <h5>You have Entered special character where alphabets expected make sure you are entering only alphabets</h5>
        }
        else
        {
            int i = 0;
            bool res = int.TryParse(st, out i);
            //if the string is having number as input and that's why it didn't match

            if (res == true)
            {
                <h5>Your Search - <b>@ViewBag.SearchString</b> for search category <b>@ViewBag.SearchByString</b> did not match any rows</h5>
                <h5>You have Entered a number where alphabets were expected make sure you are entering only alphabets</h5>
            }
            //if the string is valid bu it does not match any of rows
            else
            {
                <h5>Your Search - <b>@ViewBag.SearchString</b> for search category <b>@ViewBag.SearchByString</b> did not match any rows</h5>
            }
        }
    }
    else
    {
        <table class="table">
            <tr>
                <th style="text-align:center">
                    <p>Equipment Name</p>
                </th>
                <th style="text-align:center">
                    <p>Equipment Total Quantity</p>
                </th>
                <th style="text-align:center">
                    <p>Equipment Currently In Use Count</p>
                </th>
                <th style="text-align:center">
                    <p>Equipment Category Name</p>
                </th>
                <th style="text-align:center"></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr style="text-align:center">
                    @{
                        var fontColor = "black";
                        if (item.EquipmentCategory.EquipmentCategoryIsReusable)
                        {
                            if (item.PatientId == null)
                            {
                                fontColor = "darkgreen";
                            }
                            else
                            {
                                fontColor = "red";
                            }
                        }
                    }
                    <td style="color: @fontColor">
                        @Html.DisplayFor(modelItem => item.EquipmentName)
                    </td>
                    <td style="color: @fontColor">
                        @Html.DisplayFor(modelItem => item.EquipmentTotalQuantity)
                    </td>
                    <td style="color: @fontColor">
                        @Html.DisplayFor(modelItem => item.EquipmentInUseCount)
                    </td>
                    <td style="color: @fontColor">
                        @Html.DisplayFor(modelItem => item.EquipmentCategory.EquipmentCategoryName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.EquipmentId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.EquipmentId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.EquipmentId })
                    </td>
                </tr>
             }
        </table>
        <p style="font-family: 'Times New Roman'; font-size: large">Total Equipments in Inventory : @{
            int Totalcount = 0;
            foreach (var item in Model)
            {
                Totalcount = Totalcount + item.EquipmentTotalQuantity;
            }
        }@Totalcount
        </p>
        @*<p style="font-family: 'Times New Roman'; font-size: large">Total Equipments Available: @{
            int Availablecount = 0;
            foreach (var item in Model)
            {
                if(item.EquipmentCategory.EquipmentCategoryIsReusable && item.PatientId == null)
                {
                    Availablecount = Availablecount + item.EquipmentTotalQuantity;
                }
            }
            }@Availablecount
        </p>*@
    }

</div>
<a href="equipmentcategories">Show Equipment category List</a>